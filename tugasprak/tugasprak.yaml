openapi: 3.0.0
info:
  title: Product API
  description: This is a web service API for managing product data.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Main server

paths:
  /products:
    get:
      summary: Get all products
      description: Retrieve a list of all products.
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Add a new product
      description: Create a new product in the database.
      requestBody:
        description: Product data to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data

  /products/{id}:
    get:
      summary: Get a specific product
      description: Retrieve a single product by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update a product
      description: Update the information of a specific product by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Invalid input data
        '404':
          description: Product not found

    delete:
      summary: Delete a product
      description: Remove a product from the database by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product
          example: 1
        name:
          type: string
          description: Name of the product
          example: "Laptop"
        description:
          type: string
          description: Description of the product
          example: "A high-performance laptop."
        price:
          type: number
          format: float
          description: Price of the product
          example: 1200.50
        stock:
          type: integer
          description: Stock quantity available
          example: 100
